.grid-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: hidden;
  }
  
  .grid {
    display: grid;
    grid-template-columns: repeat(7, 252px); // 7 Colunas de 252px
  
    max-height: 0px;
    visibility: hidden; // Por padrão, escondido
    pointer-events: none;
  
    &.active {
      max-height: unset; //Vai tirar o max-width padrãpo que é 0
      visibility: visible;
      pointer-events: auto;
    }
  }
  
  .column { 
    width: 100%; // Vai ocupar todo espaço que ela tem
    display: flex;
    flex-direction: column;
    align-items: center;
  
    transition: 1s;
  
    &:nth-child(1) { // Primeiro filho da Column
      margin-top: 0;
      transition-delay: $columns-transition-delay * 0;
    }
    &:nth-child(2) {
      margin-top: 160px;
      transition-delay: $columns-transition-delay * 1;
    }
    &:nth-child(3) {
      margin-top: 320px;
      transition-delay: $columns-transition-delay * 2;
    }
    &:nth-child(4) {
      margin-top: 480px;
      transition-delay: $columns-transition-delay * 3;
    }
    &:nth-child(5) {
      margin-top: 320px;
      transition-delay: $columns-transition-delay * 4;
    }
    &:nth-child(6) {
      margin-top: 160px;
      transition-delay: $columns-transition-delay * 5;
    }
    &:nth-child(7) {
      margin-top: 0;
      transition-delay: $columns-transition-delay * 6;
    }
  }
  .item {
    width: 236px; // Não vai ser igual aos 252px, para dar um espaço
    height: 350px; /// Altura dos blocos
    background: $red;
    border-radius: 10px;
  }
  .item:not(:first-child) { // Tudo que não for o primeiro filho, vai recer um margin-top
    margin-top: 16px;
  }